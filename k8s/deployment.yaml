apiVersion: apps/v1
kind: Deployment
metadata:
  name: offre-api
  namespace: offreapi
  labels:
    app: offre-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: offre-api
  template:
    metadata:
      labels:
        app: offre-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "5000"
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.35
          command:
            - /bin/sh
            - -c
            - |
              echo "ðŸ•“ Sleep 15s en attendant Postgres"; sleep 15

      containers:
        - name: offre-api
          image: elcer/offre-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http                  # ðŸŸ¢ nom requis pour Prometheus
              containerPort: 5000
          envFrom:
            - secretRef:
                name: offre-api-secret
          env:
            - name: PROMETHEUS_MULTIPROC_DIR
              value: /tmp
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1.5Gi"
          volumeMounts:
            - name: uploads-volume
              mountPath: /app/uploads
            - name: prometheus-metrics
              mountPath: /tmp

      volumes:
        - name: uploads-volume
          emptyDir: {}
        - name: prometheus-metrics
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: offre-api
  namespace: offreapi
  labels:
    app: offre-api
spec:
  selector:
    app: offre-api
  ports:
    - name: http
      protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 30080